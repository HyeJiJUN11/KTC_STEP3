name: master 및 weekly 브랜치 merge 시 CI/CD 파이프라인

on:
  push:
    branches:
      - 'master'
      - 'weekly/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 프로젝트 코드를 CI 서버로 옮겨오기
        uses: actions/checkout@v4

      - name: Gradle 캐시 설정
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: JDK 21 설치
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: FCM 서비스 계정 키 파일 생성
        run: |
          echo '${{ secrets.FCM_SERVICE_ACCOUNT_KEY }}' > ./src/main/resources/everymoment.json

      - name: AWS S3 관련 정보를 설정 파일에 주입
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-prod.yml
        env:
          spring.datasource.url: ${{ secrets.RDS_URL }}
          spring.datasource.username: ${{ secrets.RDS_USERNAME }}
          spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
          aws.s3.bucket: ${{ secrets.AWS_S3_BUCKET }}
          aws.s3.accessKey: ${{ secrets.AWS_S3_ACCESS_KEY }}
          aws.s3.secretKey: ${{ secrets.AWS_S3_SECRET_KEY }}
          jwt.secret: ${{ secrets.JWT_SECRET }}

      - name: 빌드로 테스트 수행 및 Jar 파일 생성
        run: |
          chmod +x ./gradlew
          ./gradlew clean build --build-cache
      - run: mv build/libs/*SNAPSHOT.jar ./app.jar

      - name: 생성된 Jar 파일 EC2 서버로 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script_stop: true
          overwrite: true
          source: app.jar
          target: /home/ubuntu/project

      - name: EC2 서버에 접속하기(SSH) 및 스프링 서버 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script_stop: true
          script: |
            cd ./project
            sudo fuser -k -n tcp 8080 || true
            nohup java -Duser.timezone=Asia/Seoul -jar app.jar > ./output.log 2>&1 &
